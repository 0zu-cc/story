<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.storyxc.mapper.UserDao">

    <resultMap id="userMap" type="com.storyxc.pojo.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="sex" property="sex"/>
        <result column="phone" property="phone"/>
        <result column="created_time" property="createdTime"/>
        <result column="head_pic" property="headPic"/>
        <result column="last_login" property="lastLogin"/>
        <result column="last_login_ip" property="lastLoginIp"/>
    </resultMap>
    
    <resultMap id="userRolePermissionMap" type="com.storyxc.pojo.User" extends="userMap">
        <collection property="roles" column="role_id" ofType="com.storyxc.pojo.Role">
            <id column="id" property="id"/>
            <result property="name" column="role_name"/>
            <result property="keyword" column="role_keyword"/>
            <collection property="permissions" column="permission_id" ofType="com.storyxc.pojo.Permission">
                <id property="id" column="permission_id"/>
                <result property="name" column="permission_name"/>
                <result property="keyword" column="permission_keyword"/>
            </collection>
        </collection>
    </resultMap>


    <select id="findByUsername" resultMap="userRolePermissionMap" parameterType="string">
        select u.*,
             ur.role_id, r.name as role_name, r.keyword as role_keyword,
             rp.permission_id, p.name as perimssion_name, p.keyword as permission_keyword
        from story_user u
        inner join story_role_user ur on u.id=ur.user_id
        inner join story_role r on r.id=ur.role_id
        inner join story_role_permission rp on r.id=rp.role_id
        inner join story_permission p on p.id=rp.permission_id
        where u.username=#{username}
    </select>

    <select id="queryUserList" resultMap="userMap" parameterType="string">
        select * from story_user
        <if test="value != null and value.length>0">
            <where>
                username like #{value} or phone like #{value} or email like #{value}
            </where>
        </if>
    </select>

    <insert id="addUser" parameterType="user">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO story_user (username, password, email, sex, phone, created_time, head_pic, last_login)
        values(#{username}, #{password}, #{email}, #{sex}, #{phone}, #{createdTime}, #{headPic}, #{lastLogin});
    </insert>

    <insert id="setUserRole" parameterType="int">
        insert into story_role_user(user_id,role_id)
        values (#{userId},#{roleId})
    </insert>

    <select id="queryUserById" parameterType="int" resultMap="userMap">
        select id,username,email,sex,phone,created_time,last_login
        from story_user where id = #{id}
    </select>

    <select id="getRoleIdsByUserId" parameterType="int" resultType="int">
        select role_id from story_role_user where user_id = #{id}
    </select>

    <delete id="delete" parameterType="int">
        delete from story_user where id = #{id}
    </delete>

    <delete id="deleteUserRole" parameterType="int">
        delete from story_role_user where user_id = #{id}
    </delete>

    <update id="editUser" parameterType="user">
        update
            story_user
        set
          username=#{username}, email=#{email}, sex=#{sex}, phone=#{phone}
        where
          id = #{id}
    </update>

    <select id="findUserByUsername" parameterType="string" resultType="user">
        select username,created_time,email,phone from story_user where username = #{username}
    </select>

    <insert id="setUserCommon" parameterType="int">
        insert into story_role_user (user_id,role_id) values(#{id},2)
    </insert>

    <select id="queryEncodedPwd" parameterType="string" resultType="string">
        select password from story_user where username = #{userCode}
    </select>

    <update id="changePwd" parameterType="string">
        update story_user set password = #{password} where username = #{username}
    </update>

    <update id="updateLoginTimeByName" parameterType="String">
        update story_user set last_login = current_timestamp , last_login_ip = #{remoteAddr} where username = #{username}
    </update>
</mapper>